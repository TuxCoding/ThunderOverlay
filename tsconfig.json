{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Language and Environment */
    // We can run on the latest browser so include the latest standards in output,
    // although it could still break if the browser didn't implement a specific feature from this standard
    "target": "ES2023",                                /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "ESNext",                                /* Specify what module code is generated. */

    /* Modules */
    "rootDirs": [                                      /* Specify the root folder within your source files. */
        "src",
        "tests"
    ],

    // import json directly into output
    "resolveJsonModule": true,                         /* Enable importing .json files. */

    // we are bundling the project
    "moduleResolution": "Bundler",                     /* Specify how TypeScript looks up a file from a given module specifier. */
    "noEmit": true,                                    /* Disable emitting files from a compilation. */

    // strictness
    "noImplicitAny": true,
    "allowJs": false,

    /* Interop Constraints */
    "isolatedModules": true,                            /* Ensure that each file can be safely transpiled without relying on other imports. */
    //"verbatimModuleSyntax": true,                     /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
    "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
    "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */
    "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
    //"noUnusedLocals": true,                           /* Enable error reporting when local variables aren't read. */
    //"noUnusedParameters": true,                       /* Raise an error when a function parameter isn't read. */
    "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
    //"noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
    "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */
    //"allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */
    //"allowUnreachableCode": true,                     /* Disable error reporting for unreachable code. */

    /* Completeness */
    "skipLibCheck": true,                                 /* Skip type checking all .d.ts files. */
    "skipDefaultLibCheck": true
  }
}
